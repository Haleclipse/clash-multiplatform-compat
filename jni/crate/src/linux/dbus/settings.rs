//! # DBus interface proxy for: `org.freedesktop.portal.Settings`
//!
//! This code was generated by `zbus-xmlgen` `3.1.0` from DBus introspection data.
//! Source: `org.freedesktop.portal.Settings.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(interface = "org.freedesktop.portal.Settings", assume_defaults = true)]
trait Settings {
    /// Read method
    fn read(&self, namespace: &str, key: &str) -> zbus::Result<zbus::zvariant::OwnedValue>;

    /// ReadAll method
    fn read_all(
        &self,
        namespaces: &[&str],
    ) -> zbus::Result<std::collections::HashMap<String, std::collections::HashMap<String, zbus::zvariant::OwnedValue>>>;

    /// SettingChanged signal
    #[dbus_proxy(signal)]
    fn setting_changed(&self, namespace: &str, key: &str, value: zbus::zvariant::Value<'_>) -> zbus::Result<()>;

    /// version property
    #[dbus_proxy(property, name = "version")]
    fn version(&self) -> zbus::Result<u32>;
}
