//! # DBus interface proxy for: `org.freedesktop.portal.Notification`
//!
//! This code was generated by `zbus-xmlgen` `3.1.0` from DBus introspection data.
//! Source: `org.freedesktop.portal.Notification.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(interface = "org.freedesktop.portal.Notification", assume_defaults = true)]
trait Notification {
    /// AddNotification method
    fn add_notification(
        &self,
        id: &str,
        notification: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// RemoveNotification method
    fn remove_notification(&self, id: &str) -> zbus::Result<()>;

    /// version property
    #[dbus_proxy(property, name = "version")]
    fn version(&self) -> zbus::Result<u32>;
}
