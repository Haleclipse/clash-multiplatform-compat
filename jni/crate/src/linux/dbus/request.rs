//! # DBus interface proxy for: `org.freedesktop.portal.Request`
//!
//! This code was generated by `zbus-xmlgen` `3.1.0` from DBus introspection data.
//! Source: `org.freedesktop.portal.Request.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(interface = "org.freedesktop.portal.Request", assume_defaults = true)]
trait Request {
    /// Close method
    fn close(&self) -> zbus::Result<()>;

    /// Response signal
    #[dbus_proxy(signal)]
    fn response(&self, response: u32, results: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>) -> zbus::Result<()>;
}
